---
# tasks file for hidden-service

- name: ensure gpg2 is installed on debian stretch
  apt:
    pkg: gnupg2
    state: present
  when: ansible_distribution_major_version|int >= 9

# required to allow installation of packages from torproject repo
- name: ensure the repository key is present
  apt_key:
    data: "{{ lookup('file', 'torproject.asc') }}"
    state: "{{ hidden_service_tor_apt_state }}"

- name: ensure the required repository is present
  apt_repository:
    repo: "deb http://deb.torproject.org/torproject.org {{ ansible_distribution_release }} main"

- name: ensure tor is installed
  apt:
    pkg: tor
    state: "{{ hidden_service_tor_apt_state }}"

  #
  # - removed trailing 0: 0.3.2.1 --> 3.2.1
  # - jinja2 filter compare version is allowing max. two dots (https://pizjix.com/version-numbers-in-ansible-code/)
  # - comparision is needed as safety, to not deploy hidden services in version 3,
  #   if the tor version does not support it
  #
- name: register version of tor
  shell: "tor --version | cut -d' ' -f3 | cut -d. -f2-"
  register: tor_version
  check_mode: no
  changed_when: false

- name: install extra tor packages
  apt:
    pkg: "{{ item }}"
    state: present
  with_items: "{{ hidden_service_apt_packages }}"

- name: ensure hidden service directory is present
  file:
    path: "/var/lib/tor/{{ item.key }}/"
    owner: debian-tor
    group: debian-tor
    mode: 0700
    state: directory
  with_dict: "{{ hidden_service_services }}"
  register: hidden_service_directory_creation_result
  when: item.value.hidden_service_state|default('present') == 'present'

- name: ensure hidden service configuration is latest
  template:
    src: torrc.j2
    dest: /etc/tor/torrc
    owner: root
    group: root
    mode: 0644
  notify:
    - restart tor

- name: ensure hostname file are present
  template:
    src: hostname
    dest: "/var/lib/tor/{{ item.key }}/hostname"
    owner: debian-tor
    group: debian-tor
    mode: 0600
    backup: yes
  with_dict: "{{ hidden_service_services }}"
  when: item.value.hidden_service_hostname is defined and
        item.value.hidden_service_hostname and
        item.value.hidden_service_state|default('present') == 'present'
  notify: restart tor

- name: ensure private_key file are present
  template:
    src: private_key
    dest: "/var/lib/tor/{{ item.key }}/private_key"
    owner: debian-tor
    group: debian-tor
    mode: 0600
    backup: yes
  with_dict: "{{ hidden_service_services }}"
  when: item.value.hidden_service_private_key is defined and
        item.value.hidden_service_private_key and
        item.value.hidden_service_state|default('present') == 'present'
  notify: restart tor

- name: ensure hidden service directory is absent
  file:
    path: "/var/lib/tor/{{ item.key }}/"
    owner: debian-tor
    group: debian-tor
    mode: 0700
    state: absent
  with_dict: "{{ hidden_service_services }}"
  when: item.value.hidden_service_state|default('present') == "absent"

  # The hostname file won't be created until the tor service
  # is reloaded, so bounce it before the `wait_for` task.
- name: reload tor if service was created
  service:
    name: tor
    state: restarted
  when: hidden_service_directory_creation_result is changed

- name: wait for hidden service
  wait_for:
    path: "/var/lib/tor/{{ item.key }}/hostname"
  with_dict: "{{ hidden_service_services }}"
  when: item.value.hidden_service_state|default('present') != "absent"

- name: read hidden service url
  command: cat "/var/lib/tor/{{ item.key }}/hostname"
  register: hidden_service_hostname_results
  changed_when: false
  with_dict: "{{ hidden_service_services }}"
  when: not item.value.hidden_service_hostname|default(false) and item.value.hidden_service_state|default('present') != "absent"

- name: display hidden service url
  debug:
    msg: >-
      {{ lookup('template', role_path+'/templates/display_hostnames.j2') }}

# dirty hack to stop tor, when server is not the current hidden service,
# restart handler above , would start tor with
# same url and private key on two hosts
- name: stop tor, (two servers are up, only one should act as HS)
  service:
    name: tor
    enabled: no
    state: stopped
  notify: stop tor
  when: not hidden_service_active

- include: monit.yml
  when: hidden_service_monit_enabled
